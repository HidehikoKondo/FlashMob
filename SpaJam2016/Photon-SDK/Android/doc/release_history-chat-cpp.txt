* release_history-chat-cpp.txt
* Release history for the Exit Games Chat C++ Client Library

(C) 2004-2016 Exit Games GmbH, http://www.photonengine.com

Questions? Visit:
	http://doc.photonengine.com/en/chat
	http://forum.photonengine.com


*** version 4.1.1.0
	Date: 03-16-2016
	- fixed: a performance bottleneck on receiving very large messages


*** version 4.0.5.0
	Date: 12-02-2015
	- changed: the following functions now directly accept every type of data as payload that is supported by Photons serialization, without the need for the caller to first wrap the payload in a Common::Object instance:
		- Peer::opPublishMessage()
		- Peer::opSendPrivateMessage()
		- Peer::opSetOnlineStatus()
		- Client::opPublishMessage()
		- Client::opSendPrivateMessage()
		- Client::opSetOnlineStatus()
	- changed: the inheritance of Listener from Common::BaseListener is now virtual
	- removed: all non default constructors from class AuthenticationValues
	- added: AuthenticationValues::setType()
	- added: AuthenticationValues::setParameters()
	- added: AuthenticationValues::setParametersWithUsernameAndToken()
	- added: AuthenticationValues::setData()
	- added: AuthenticationValues::getUserID()
	- added: AuthenticationValues::setUserID()
	- removed: parameter 'userID' from the constructor of class Client
	- moved: parameter 'authenticationValues' from the constructor of class Client to Client::connect()
	- changed: renamed Client::getUserId() to getUserID()
	- fixed: Client::getUserID() is now const-correct
	- removed: Client::setUserId()
	- removed: parameter 'userID' from Peer::opAuthenticateOnNameServer()


*** version 4.0.4.0
	Date: 08-07-2015
	- changed: renamed MutableRoom::getRoomTtl() to MutableRoom::getEmptyRoomTtl()
	- fixed: Client::connect() changed the Client state to Connecting even when returning false
	- added: Client::getQuickResendAttempts()
	- added: Client::setQuickResendAttempts()
	- changed: ClientState enum from namespaced native enum to namespaced group of static const int


*** version 4.0.3.0
	Date: 06-04-2015
	- added: AuthenticationValues constructor overload for parameters "parameters" and "data"
	- changed: AuthenticationValues now inherits from Common::Base and is therefor stringifyable
	- removed: Channel constructor from public interface
	- removed: Channel::add() from public interface
	- changed: Client::getPublicChannels() now returns a Common::JVector<Channel*>& instead of a Common::JVector<Channel>&
	- changed: Client::getPrivateChannels() now returns a Common::JVector<Channel*>& instead of a Common::JVector<Channel>&
	- fixed: Listener::connectReturn() was not getting called


*** version 4.0.0.0
	Date: 12-04-2014
	- changed: versioning system to use the general Client SDK version instead of a separate Chat SDK version
	- added: optional "encrypt" parameter to Client::opSendPrivateMessage() - sends operation encrypted
	- added: Client::setUserId() and Client::getUserId()
	- changed: Listener::subscribeReturn() and Listener::unsubscribeReturn(): error code and message have been removed from parameters since server sends events on opSubscribe() and opUnsubscribe() instead of responses
	- removed: Peer::opSetFriendList()
	- added: Peer::opAddFriends()
	- added: Peer::opRemoveFriends()
	- added: parameter "encrypt" to Peer::opSendPrivateMessage()
	- added: parameter "skipMessage" to Peer::opSetOnlineStatus()
	- added: Client::connect() overload without nameserver address parameter, that connects to the Photon public cloud nameserver
	- removed: optional parameter "lastMessageIndex" from Peer::opSubscribe()
	- added: optional parameter "messagesFromHistory" to Peer::opSubscribe()
	- removed: parameters "errorCode" and "errorString" from Listener::subscribeReturn()
	- removed: parameters "results", "errorCode" and "errorString" from Listener::unsubscribeReturn()
	- added: parameter "gotMessage" to Listener::onStatusUpdate()
	- removed: parameter "highestMessageId" from Listener::onGetMessages()
	- added: parameter "channelName" to Listener::onPrivateMessage()
	- added: wrapper functions in Chat::Client for everything in the public Chat::Peer API that makes sense to also have access to in the public Chat::Client API
	- removed: Client::getNameserverAddress(); it only provides irrelevant information, because the nameserver address is always either what the app has passed to connect or the default parameter value of that function, so it is known to the app anyway
	- fixed: when connecting to the the Cloud Chat service via TCP without explicitly specifying the address and the port, then the wrong port has been used 


*** version 1.0.0.2
	Date: 05-27-2014
	- fixed: missing graphs in documentation


*** version 1.0.0.0
	Date: 04-24-2014
	Initial Version